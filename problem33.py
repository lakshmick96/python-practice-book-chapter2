#Problem 33: Write a function nearly_equal to test whether two strings are nearly equal. 
#Two strings a and b are nearly equal when a can be generated by a single mutation on b.


def mutate(word):
    words_list = []
    
    alphabets = 'abcdefghijklmnopqrstuvwxyz'

    for i in range(len(word)+1):
        for j in range(len(alphabets)):
            a = list(word)
            a.insert(i, alphabets[j])
            words_list.append(''.join(a))
        
    for i in range(len(word)):
        b = word.replace(word[i], '')
        words_list.append(b)
    
    for i in range(len(word)):
        for j in range(len(alphabets)):
            c = word.replace(word[i], alphabets[j])
            words_list.append(c)
            
    for i in range(len(word) - 1):
        j = i + 1
        new = ''
        d = list(word)
        d[i], d[j] = d[j], d[i]
        for char in d:
            new += char
        words_list.append(new)
        
    return words_list

def nearly_equal(a, b):
    return b in mutate(a)

